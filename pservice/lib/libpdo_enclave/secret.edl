/* Copyright 2018 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

enclave {
    include "sgx_trts.h"
    include "sgx_tseal.h"
    include "pdo_error.h"

    trusted {
        public pdo_err_t ecall_CalculateSealedEnclaveDataSize(
            [out] size_t* pSealedEnclaveDataSize
            );

        public pdo_err_t ecall_CalculatePublicEnclaveDataSize(
            [out] size_t* pPublicEnclaveDataSize
            );

        public pdo_err_t ecall_CalculateSealedSecretSize(
            size_t plain_len,
            [out] size_t* pSealedSecretSize
            );

        public pdo_err_t ecall_CalculatePlainSecretSize(
            [in, size=inSealedSecretSize] const uint8_t* inSealedSecret,
            size_t inSealedSecretSize,
            [out] uint32_t* pPlainSecretSize
            );


        public pdo_err_t ecall_CreateEnclaveData(
            [in] const sgx_target_info_t* inTargetInfo,
            [out, size=inAllocatedPublicEnclaveDataSize] char* outPublicEnclaveData,
            size_t inAllocatedPublicEnclaveDataSize,
            [out] size_t* outPublicEnclaveDataSize,
            [out, size=inAllocatedSealedEnclaveDataSize] uint8_t* outSealedEnclaveData,
            size_t inAllocatedSealedEnclaveDataSize,
            [out] size_t* outSealedEnclaveDataSize,
            [out] sgx_report_t* outEnclaveReport
            );

        public pdo_err_t ecall_UnsealEnclaveData(
            [in, size=inSealedEnclaveDataSize] const uint8_t* inSealedEnclaveData,
            size_t inSealedEnclaveDataSize,
            [out, size=inAllocatedPublicEnclaveDataSize] char* outPublicEnclaveData,
            size_t inAllocatedPublicEnclaveDataSize,
            [out] size_t* outPublicEnclaveDataSize
            );

        public pdo_err_t ecall_CreateSealedSecret(
            size_t secret_len,
            [out, size=inAllocatedSealedSecretSize] uint8_t* outSealedSecret,
            size_t inAllocatedSealedSecretSize
            );

        public pdo_err_t ecall_UnsealSecret(
            [in, size=inSealedSecretSize] const uint8_t* inSealedSecret,
            size_t inSealedSecretSize,
            [out, size=inAllocatedPlainSecretSize] uint8_t* outPlainSecret,
            uint32_t inAllocatedPlainSecretSize
            );


        public pdo_err_t ecall_GenerateEnclaveSecret(
            [in, size=inSealedEnclaveDataSize] const uint8_t* inSealedEnclaveData,
            size_t inSealedEnclaveDataSize,
            [in, size=inSealedSecretSize] const uint8_t* inSealedSecret,
            size_t inSealedSecretSize,
            [in, string] const char* inContractId,
            [in, string] const char* inOpk,
            [in, string] const char* inEnclaveInfo,
            [out, size=inAllocatedSignedSecretSize] uint8_t* outSignedSecret,
            size_t inAllocatedSignedSecretSize
            );

    };
};

# Copyright 2018 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sawtooth_sdk/protobuf/setting.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sawtooth_sdk/protobuf/setting.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n#sawtooth_sdk/protobuf/setting.proto\"O\n\x07Setting\x12\x1f\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x0e.Setting.Entry\x1a#\n\x05\x45ntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\tB&\n\x15sawtooth.sdk.protobufP\x01Z\x0bsetting_pb2b\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SETTING_ENTRY = _descriptor.Descriptor(
  name='Entry',
  full_name='Setting.Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Setting.Entry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Setting.Entry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=118,
)

_SETTING = _descriptor.Descriptor(
  name='Setting',
  full_name='Setting',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='Setting.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETTING_ENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=118,
)

_SETTING_ENTRY.containing_type = _SETTING
_SETTING.fields_by_name['entries'].message_type = _SETTING_ENTRY
DESCRIPTOR.message_types_by_name['Setting'] = _SETTING

Setting = _reflection.GeneratedProtocolMessageType('Setting', (_message.Message,), dict(

  Entry = _reflection.GeneratedProtocolMessageType('Entry', (_message.Message,), dict(
    DESCRIPTOR = _SETTING_ENTRY,
    __module__ = 'sawtooth_sdk.protobuf.setting_pb2'
    # @@protoc_insertion_point(class_scope:Setting.Entry)
    ))
  ,
  DESCRIPTOR = _SETTING,
  __module__ = 'sawtooth_sdk.protobuf.setting_pb2'
  # @@protoc_insertion_point(class_scope:Setting)
  ))
_sym_db.RegisterMessage(Setting)
_sym_db.RegisterMessage(Setting.Entry)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\025sawtooth.sdk.protobufP\001Z\013setting_pb2'))
# @@protoc_insertion_point(module_scope)

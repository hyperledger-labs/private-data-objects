{
    "$schema": "http://json-schema.org/schema#",
    "title": "CCF Transaction Payloads",
    "definitions": {
        "RegisterEnclave": {
            "description":[
                "Payload description used by eservice to register  an enclave with ledger"
            ],
            "properties":{
                "verifying_key": {
                    "description": [
                        "PEM encoded ECDSA verifying key used to verify enclave signatures"
                    ],
                    "$ref": "#/pdo/basetypes/ecdsa-public-key",
                    "required": true
                },
                "encryption_key": {
                    "description": [
                        "PEM encoded RSA public key used to encrypt messages to enclave"
                    ],
                    "$ref": "#/pdo/basetypes/rsa-public-key",
                    "required": true
                },
                "proof_data": {
                    "description":[
                        "Enclave attestation report. Send an empty string when working with simulate mode"
                    ],
                    "type": "string",
                    "required":true,
                    "format": "JSON string"
                },
                "enclave_persistent_id": {
                    "description":[
                        "Enclave persistent id"
                    ],
                    "type": "string",
                    "required":true,
                    "format": "HEX string"
                },
                "registration_block_content": {
                    "description":[
                        "registration block content"
                    ],
                    "type": "string",
                    "required":true
                },
                "organizational_info": {
                    "description":[
                        "Info about organization hosting the enclave"
                    ],
                    "type": "string",
                    "required":true
                },
                "eservice_verifyfing_key":{
                    "description": [
                        "PEM encoded ECDSA verifying key used to verify eservice signatures"
                    ],
                    "$ref": "#/pdo/basetypes/ecdsa-public-key",
                    "required":true
                },
                "signature":{
                    "description": [
                        "Payload signature generated by eservice"
                    ],
                    "$ref":"#/pdo/basetypes/ecdsa-signature",
                    "required":true
                }
            }
        },
        "RegisterContract":{
            "description":[
                "Payload description used by contract creator to register a new contract with ledger"
            ],
            "properties": {
                "contract_id":{
                    "$ref":"#/pdo/basetypes/contract-id",
                    "required":true
                },
                "contract_code_hash": {
                    "description":[
                        "SHA256 hash of contract code"
                    ],
                    "$ref":"#/pdo/basetypes/encoded-hash",
                    "required":true
                },
                "contract_creator_verifying_key_PEM": {
                    "$ref": "#/pdo/basetypes/ecdsa-public-key",
                    "required":true
                },
                "provisioning_service_ids":{
                    "description:":[
                        "Array of pservice identities used to provision secrets to contract enclaves"
                    ],
                    "type":"array",
                    "contains":{
                        "$ref": "#/pdo/basetypes/ecdsa-public-key"
                    },
                    "required":true
                },
                "nonce":{
                    "description":[
                        "A nonce added to the payload before generating payload signature.",
                        "Nonce ensures unique contract ids for replicas of the same contract."
                    ],
                    "type":"string",
                    "required":true,
                    "format": "HEX string"
                },
                "signature":{
                    "description": [
                        "Payload signature generated by contract creator"
                    ],
                    "$ref":"#/pdo/basetypes/ecdsa-signature",
                    "required":true
                }
            }
        },
        "AddEnclaveToContract":{
            "description":[
                "Payload description used by contract creator for provisioning enclaves to an existing contract"
            ],
            "properties": {
                "contract_id":{
                    "$ref":"#/pdo/basetypes/contract-id",
                    "required":true
                },
                "enclave_info":{
                    "description:":[
                        "Specification of the list of enclaves to be associated with the contract"
                    ],
                    "type": "string",
                    "required":true,
                    "format": "JSON encoding of an array of #/pdo/payload_basetypes/enclave_info"
                },
                "signature":{
                    "description": [
                        "Payload signature generated by contract creator"
                    ],
                    "$ref":"#/pdo/basetypes/ecdsa-signature",
                    "required":true
                }
            }
        },
        "CclUpdate":{
            "description":[
                "Payload description used by a contract client for registering a contract state update with the ledger.",
                "The same payload structure is used by the contract creator to register the creation of the initial contract state."
            ],
            "properties": {
                "verb":{
                    "description":[
                        "Specifies if the transaction is for an init or an update operation"
                    ],
                    "type": "string",
                    "enum": [
                        "init",
                        "update"
                   ],
                   "required":true
                },
                "contract_enclave_id":{
                    "description:":[
                        "The id of the enclave used to perform the state update (or init)"
                    ],
                    "$ref":"#/pdo/basetypes/ecdsa-public-key",
                    "required":true
                },
                "contract_enclave_signature":{
                    "description:":[
                        "Enclave signature attesting the state update computation"
                    ],
                    "$ref":"#/pdo/payload_basetypes/enclave_signature",
                    "required":true
                },
                "state_update_info":{
                    "description":[
                        "Specifies information about the contract state update."
                    ],
                    "type":"string",
                    "required":true,
                    "format":"JSON encoding of #/pdo/payload_basetypes/state_update"
                },
                "nonce":{
                    "description":[
                        "Equivalent of channel id used for Sawtooth CCL transactions. Hash of nonce get signed by enclave"
                    ],
                    "type":"string",
                    "required":true,
                    "format":"HEX string"
                },
                "signature":{
                    "description": [
                        "Payload signature generated by contract client"
                    ],
                    "$ref":"#/pdo/basetypes/ecdsa-signature",
                    "required":true}
            }
        }
    }
}

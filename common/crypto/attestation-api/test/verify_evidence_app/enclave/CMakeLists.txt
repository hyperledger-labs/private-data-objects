# Copyright 2020 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

CMAKE_MINIMUM_REQUIRED(VERSION 3.2 FATAL_ERROR)

INCLUDE ("CMakeVariables.txt")

SET(ENCLAVE_NAME test_verify_enclave)
PROJECT(${ENCLAVE_NAME} C CXX)

add_definitions(-DENCLAVE_CODE)

FILE(GLOB ENCLAVE_HEADERS *.h)
FILE(GLOB ENCLAVE_EDL *.edl)
FILE(GLOB ENCLAVE_CONFIG *.xml)
FILE(GLOB ENCLAVE_LDS *.lds)
FILE(GLOB ENCLAVE_SOURCES
    *.cpp
    )

SGX_EDGE_TRUSTED(${ENCLAVE_EDL} ENCLAVE_EDGE_SOURCES)
SET(ENCLAVE_EDL ${ENCLAVE_EDL} PARENT_SCOPE)

ADD_LIBRARY(${ENCLAVE_NAME} SHARED ${ENCLAVE_HEADERS} ${ENCLAVE_SOURCES} ${ENCLAVE_EDGE_SOURCES})

TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PRIVATE "../../../include")
TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PUBLIC  ${SGX_SDK}/include)
TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PUBLIC  ${SGX_SDK}/include/libcxx)
TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PRIVATE ${SGX_SDK}/include/tlibc)
TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PUBLIC ${LOGGING_TRUSTED_INCLUDE_PATH})

TARGET_INCLUDE_DIRECTORIES(${ENCLAVE_NAME} PRIVATE ${SGX_SSL}/include)
	
TARGET_COMPILE_OPTIONS(${ENCLAVE_NAME} PRIVATE $<$<COMPILE_LANGUAGE:CXX>:-nostdinc++>)
TARGET_COMPILE_OPTIONS(${ENCLAVE_NAME} PRIVATE ${COMMON_CXX_FLAGS})
TARGET_COMPILE_OPTIONS(${ENCLAVE_NAME} PRIVATE -nostdinc)

TARGET_LINK_DIRECTORIES(${ENCLAVE_NAME} PRIVATE ${SGX_SDK}/lib64)

TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--no-undefined)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -nostdlib)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -nodefaultlibs)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -nostartfiles)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-Bstatic)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-Bsymbolic)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--no-undefined)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-pie,-eenclave_entry)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--export-dynamic)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--defsym,__ImageBase=0)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--version-script=${ENCLAVE_LDS})
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-L,${SGX_SDK}/lib64)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,-L,${SGX_SSL}/lib64)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--whole-archive -lsgx_tsgxssl -Wl,--no-whole-archive)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME} -Wl,--whole-archive -l${TRTS_LIBRARY_NAME} -Wl,--no-whole-archive)
TARGET_LINK_LIBRARIES(${ENCLAVE_NAME}
    # we assume that the libraries are located 3 levels up
    "-L${CMAKE_CURRENT_BINARY_DIR}/../../.."
    -Wl,--start-group
    ${LOGGING_TRUSTED_LIB}
    -lt-one-attestation
    sgx_tsgxssl_crypto
    sgx_tstdc
    sgx_tcxx
    sgx_tcrypto
    ${SERVICE_LIBRARY_NAME}
    -Wl,--end-group
    )

SET(ENCLAVE_SIGNING_KEY "${ENCLAVE_NAME}.sign.pem")
SGX_SIGN_ENCLAVE(${ENCLAVE_NAME} ${ENCLAVE_SIGNING_KEY} ${ENCLAVE_CONFIG})

ADD_CUSTOM_COMMAND(
    TARGET ${ENCLAVE_NAME}
    PRE_BUILD
    COMMAND openssl genrsa -3 -out ${ENCLAVE_SIGNING_KEY} 3072
    )


#! /usr/bin/env pdo-shell

## Copyright 2018 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

## Two shell variables are used:
##    data -- the directory where the contract objects are stored
##    path -- the directory where the PSH scripts are stored
##
## $ pdo-shell -s create.psh -m path <contract path>

set -q --conditional -s data -v .
set -q --conditional -s save -v .
script -f ${path}/init.psh

set -q -s _user1_key -i user1
set -q -s _user2_key -i user2
set -q -s _user3_key -i user3
set -q -s _user4_key -i user4
set -q -s _user5_key -i user5

## =================================================================
echo create the asset type for green marbles
## =================================================================
identity -n green_type
create -c asset_type -s _asset_type -f ${save}/green_type.pdo
asset_type -q -w -f ${save}/green_type.pdo initialize -n "green marbles" -d "green marble description" -l "http://"

## -----------------------------------------------------------------
echo basic asset type tests
## -----------------------------------------------------------------
asset_type -q -f ${save}/green_type.pdo describe
asset_type -q -f ${save}/green_type.pdo get_asset_type_identifier -s _green_type_id_
echo green marble type identifier is ${_green_type_id_}

## =================================================================
echo create and initialize the vetting organization for green marbles
## =================================================================
identity -n green_vetting
create -c vetting-organization-contract -s _vetting_organization -f ${save}/green_vetting.pdo
vetting -q -w -f ${save}/green_vetting.pdo initialize -t ${_green_type_id_}

## -----------------------------------------------------------------
echo basic vetting organization tests
## -----------------------------------------------------------------
vetting -q -f ${save}/green_vetting.pdo get_verifying_key -s _green_vetting_id_
vetting -q -f ${save}/green_vetting.pdo get_asset_type_identifier -s _tmp_
if --not -e ${_green_type_id_} ${_tmp_}
   echo type identifier mismatch
   exit -v -1
fi

## =================================================================
echo create and initialize the green marble issuer
## =================================================================
identity -n green_issuer
create -c issuer-contract -s _issuer -f ${save}/green_issuer.pdo
issuer -q -f ${save}/green_issuer.pdo get_verifying_key -s _green_issuer_id_

identity -n green_vetting
vetting -q -f ${save}/green_vetting.pdo approve_issuer -i ${_green_issuer_id_}

identity -n green_issuer
vetting -q -f ${save}/green_vetting.pdo get_issuer_authority -i ${_green_issuer_id_} -s _authority_
echo ISSUER AUTHORITY: ${_authority_}

issuer -q -f ${save}/green_issuer.pdo initialize -a ${_authority_}

## -----------------------------------------------------------------
echo basic issuer tests
## -----------------------------------------------------------------
identity -n green_issuer
issuer -q -f ${save}/green_issuer.pdo get_asset_type_identifier -s _tmp_
if --not -e ${_green_type_id_} ${_tmp_}
   echo type identifier mismatch
   exit -v -1
fi

issuer -q -f ${save}/green_issuer.pdo get_authority -s _tmp_
if --not -e ${_authority_} ${_tmp_}
   echo authority does not match
   exit -v -1
fi

issuer -q -w -f ${save}/green_issuer.pdo issue -o ${_user1_key} -c 51
issuer -q -w -f ${save}/green_issuer.pdo issue -o ${_user2_key} -c 52
issuer -q -w -f ${save}/green_issuer.pdo issue -o ${_user3_key} -c 53
issuer -q -w -f ${save}/green_issuer.pdo issue -o ${_user4_key} -c 54
issuer -q -w -f ${save}/green_issuer.pdo issue -o ${_user5_key} -c 55

identity -n user1
issuer -q -f ${save}/green_issuer.pdo get_balance -s _balance
if --not -e ${_balance} 51
   echo balance does not match, ${_balance}
   exit -v -1
fi
echo user1 balance matched

identity -n user2
issuer -q -f ${save}/green_issuer.pdo get_balance -s _balance
if --not -e ${_balance} 52
   echo balance does not match, ${_balance}
   exit -v -1
fi
echo user2 balance matched

identity -n user3
issuer -q -f ${save}/green_issuer.pdo get_balance -s _balance
if --not -e ${_balance} 53
   echo balance does not match, ${_balance}
   exit -v -1
fi
echo user3 balance matched

identity -n user4
issuer -q -f ${save}/green_issuer.pdo get_balance -s _balance
if --not -e ${_balance} 54
   echo balance does not match, ${_balance}
   exit -v -1
fi
echo user4 balance matched

identity -n user5
issuer -q -f ${save}/green_issuer.pdo get_balance -s _balance
if --not -e ${_balance} 55
   echo balance does not match, ${_balance}
   exit -v -1
fi
echo user5 balance matched

identity -n user1
issuer -q -w -f ${save}/green_issuer.pdo transfer -n ${_user2_key} -c 50
issuer -q -f ${save}/green_issuer.pdo get_balance -s _balance
if --not -e ${_balance} 1
   echo transfer source balance does not match, ${_balance} not 1
   exit -v -1
fi

identity -n user2
issuer -q -f ${save}/green_issuer.pdo get_balance -s _balance
if --not -e ${_balance} 102
   echo transfer destination balance does not match, ${_balance} not 102
   exit -v -1
fi

echo transfer balance matched

## =================================================================
echo check escrow
## =================================================================
identity -n user1
issuer -q -w -f ${save}/green_issuer.pdo escrow -a user2 -s attestation
echo ESCROW ATTESTATION ${attestation}

## still to test:
## disburse
## claim

## =================================================================
echo check cascading issuer authority
## =================================================================

## This test cascades issuing authority through several levels
## of authority. The authority and attestation should chain from
## the green vetting type through green, green1, green2 and ultimately
## green3 issuers

## ---------- Green 1 ----------

identity -n green1_issuer
create -c issuer-contract -s _issuer -f ${save}/green1_issuer.pdo
issuer -q -f ${save}/green1_issuer.pdo get_verifying_key -s _green1_issuer_id_

identity -n green_issuer
vetting -q -f ${save}/green_issuer.pdo approve_issuer -i ${_green1_issuer_id_}

identity -n green1_issuer
issuer -q -f ${save}/green_issuer.pdo get_issuer_authority -i ${_green1_issuer_id_} -s _green1_authority_
echo GREEN1 ISSUER AUTHORITY: ${_green1_authority_}

issuer -q -f ${save}/green1_issuer.pdo initialize -a ${_green1_authority_}

## ---------- Green 2 ----------

identity -n green2_issuer
create -c issuer-contract -s _issuer -f ${save}/green2_issuer.pdo
issuer -q -f ${save}/green2_issuer.pdo get_verifying_key -s _green2_issuer_id_

identity -n green1_issuer
vetting -q -f ${save}/green1_issuer.pdo approve_issuer -i ${_green2_issuer_id_}

identity -n green2_issuer
issuer -q -f ${save}/green1_issuer.pdo get_issuer_authority -i ${_green2_issuer_id_} -s _green2_authority_
echo GREEN2 ISSUER AUTHORITY: ${_green2_authority_}

issuer -q -f ${save}/green2_issuer.pdo initialize -a ${_green2_authority_}

## ---------- Green 3 ----------

identity -n green3_issuer
create -c issuer-contract -s _issuer -f ${save}/green3_issuer.pdo
issuer -q -f ${save}/green3_issuer.pdo get_verifying_key -s _green3_issuer_id_

identity -n green2_issuer
vetting -q -f ${save}/green2_issuer.pdo approve_issuer -i ${_green3_issuer_id_}

identity -n green3_issuer
issuer -q -f ${save}/green2_issuer.pdo get_issuer_authority -i ${_green3_issuer_id_} -s _green3_authority_
echo GREEN3 ISSUER AUTHORITY: ${_green3_authority_}

issuer -q -f ${save}/green3_issuer.pdo initialize -a ${_green3_authority_}

## ---------- make sure we can issue assets ----------
issuer -q -w -f ${save}/green3_issuer.pdo issue -o ${_user1_key} -c 51
issuer -q -w -f ${save}/green3_issuer.pdo issue -o ${_user2_key} -c 52
issuer -q -w -f ${save}/green3_issuer.pdo issue -o ${_user3_key} -c 53
issuer -q -w -f ${save}/green3_issuer.pdo issue -o ${_user4_key} -c 54
issuer -q -w -f ${save}/green3_issuer.pdo issue -o ${_user5_key} -c 55

identity -n user1
issuer -q -w -f ${save}/green3_issuer.pdo escrow -a user2 -s attestation
echo escrow attestation for green3 issuer ${attestation}

exit

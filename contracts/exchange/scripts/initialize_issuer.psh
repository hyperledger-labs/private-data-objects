#! /usr/bin/env pdo-shell

## Copyright 2018 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

## This is a pdo-shell script creates the contract objects required
## for a colored marble exchange. The assumuption is that there are
## three keys available:
##    ${color}_type -- keys used for the asset type object
##    ${color}_vetting -- keys used for the vetting organization
##    ${color}_issuer -- keys used for the issuer
##
## Two shell variables are used:
##    color -- the color to use for the marble
##    data -- the directory where the contract objects are stored
##    path -- the directory where the PSH scripts are stored
##
## $ pdo-shell -s create.psh -m color <color> -m path <contract path>

set -q --conditional -s data -v .
set -q --conditional -s save -v .
script -f ${path}/init.psh

if --null ${color}
   echo must specify color: '-m color <color>'
   exit
fi

set -q --conditional -s issuer -v ${color}_issuer
set -q --conditional -s issuer_contract -v ${save}/${color}_issuer.pdo
set -q --conditional -s type_contract -v ${save}/${color}_type.pdo
set -q --conditional -s vetting_contract -v ${save}/${color}_vetting.pdo

## =================================================================
echo initialize ${color} marble issuer with vetting authority
## =================================================================
identity -n ${issuer}

## get all of the necessary values used to construct the authorization
asset_type -q -f ${type_contract} get_identifier -s _type_id
issuer -q -f ${issuer_contract} get_verifying_key -s _issuer_contract_key
vetting -q -f ${vetting_contract} get_authority -i ${_issuer_contract_key} -s _auth

## record the authorization provided by the vetting organization
issuer -q -w -f ${issuer_contract} initialize -t ${_type_id} -a ${_auth}

exit

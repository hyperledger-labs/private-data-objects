# Copyright 2018 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

# This docker-compose file starts a complete end-to-end environment for PDO with sawtooth in default mode
# and sgx in simulator mode. The code used are the master branches for pdo and sawtooth.  If you want to
# build against non-standard gitrepos/braches, you can define the environment variables PDO_REPO_URL and
# PDO_REPO_BRANCH to overwrite the defaults for PDO url/branch. 
# This will not work if the repo requires authentication, e.g., git
# with ssh, -- broader adoption of docker version 18.09+ (look for --secret/--ssh parameters) might change
# this. However, to handle the common case of building and running run against your local workspace,
# you can use thesawtooth-pdo.local-code.yaml file (see header of that file for more information).
# Similarly, to run with SGX HW mode and/or behind a proxy, add also sawtooth-pdo.sgx.yaml and/or
# sawtooth-pdo.proxy.yaml, respectively
#
# To use,
# - build base pdo-dev image (see docker/Dockerfile.pdo-dev for build-time options ..)
#    docker build docker -f docker/Dockerfile.pdo-dev -t pdo-dev
# - build docker-composed images (here and below with additional -f options as mentioned above)
#    docker-compose -f sawtooth-pdo.yaml build
# - start up enviroment
#    docker-compose -f sawtooth-pdo.yaml up
# - insitialize the ledger
#   docker-compose  -f docker/sawtooth-pdo.yaml exec validator sawset proposal create --url http://rest-api:8008 --key /root/.sawtooth/keys/my_key.priv sawtooth.validator.transaction_families='[{"family": "intkey", "version": "1.0"}, {"family":"sawtooth_settings", "version":"1.0"}, {"family": "pdo_contract_enclave_registry", "version": "1.0"}, {"family":  "pdo_contract_instance_registry", "version": "1.0"}, {"family": "ccl_contract", "version": "1.0"}]'
# - start shell on pdo-build
#   docker-compose  -f docker/sawtooth-pdo.yaml exec pdo-build bash
# - in that shell run tests (e.g., /project/pdo/src/private-data-objects/build/__tools__/run-tests.sh )
#   or start ehs/ps, run contracts and have fun ... :-)
#   - for automated tests, you also just might call 'docker-compose  -f docker/sawtooth-pdo.yaml exec pdo-build bash -i -c /project/pdo/src/private-data-objects/build/__tools__/run-tests.sh'
# - ....

version: "2.1"

services:

  # PDO EHS, PS and client ...
  pdo-build:
    image: pdo-sim-build
    build:
      context: .
      dockerfile: Dockerfile.pdo-build
      args:
        PDO_REPO_URL: ${PDO_REPO_URL:-https://github.com/hyperledger-labs/private-data-objects.git}
        PDO_REPO_BRANCH: ${PDO_REPO_BRANCH:-master}
        SGX_MODE: SIM
        PDO_INTERPRETER: ${PDO_INTERPRETER:-gipsy}
        WASM_MODE: ${WASM_MODE:-INTERP}
    container_name: sawtooth-pdo-sim-build
    hostname: sawtooth-pdo-build
    depends_on:
      - validator
    entrypoint: "bash -c \"\
        tail -f /dev/null \
        \""
    volumes:
      - ./validator-keys/:/project/pdo/build/opt/pdo/etc/keys/sawtooth

  # PDO Transaction processor
  pdo-tp:
    build:
      context: .
      dockerfile: Dockerfile.pdo-tp
    container_name: sawtooth-pdo-tp
    hostname: sawtooth-pdo-tp
    depends_on:
      - validator
    entrypoint: /project/pdo/src/private-data-objects/sawtooth/bin/pdo-tp -v -v --connect tcp://validator:4004 --debug-on
    volumes:
      - ./validator-keys/:/project/pdo/build/opt/pdo/etc/keys/sawtooth

  # Sawtooth containers ...
  settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.0
    container_name: sawtooth-settings-tp-pdo
    hostname: sawtooth-settings-tp-pdo
    depends_on:
      - validator
    entrypoint: settings-tp -vv -C tcp://validator:4004
    volumes:
      - ./validator-keys/:/project/pdo/build/opt/pdo/etc/keys/sawtooth

  validator:
    image: hyperledger/sawtooth-validator:1.0
    container_name: sawtooth-validator-pdo
    hostname: sawtooth-validator-pdo
    expose:
      - 4004
    ports:
      - "4004:4004"
    # start the validator with an empty genesis batch
    # Note: by default we symlink but some filesystems, e.g., shared folders in VirtualBox, don't support it.
    # Hence allow an override by defining environment variable LINK_CMD='cp'
    entrypoint: "bash -c \"\
        sawadm keygen --force && \
        sawtooth keygen --force my_key && \
        sawset genesis -k /root/.sawtooth/keys/my_key.priv && \
        (cd /root/.sawtooth/keys/ && ${LINK_CMD:-ln -sf} my_key.priv pdo_validator.priv) && \
	chmod a+rw /root/.sawtooth/keys/* && \
        sawadm genesis config-genesis.batch && \
        sawtooth-validator -vv \
          --endpoint tcp://validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800 \
        \""
    volumes:
      - ./validator-keys/:/root/.sawtooth/keys/


  rest-api:
    image: hyperledger/sawtooth-rest-api:1.0
    container_name: sawtooth-rest-api-pdo
    hostname: sawtooth-rest-api-pdo
    ports:
      - "8008:8008"
    depends_on:
      - validator
    entrypoint: sawtooth-rest-api -C tcp://validator:4004 --bind rest-api:8008

  shell:
    image: hyperledger/sawtooth-all:1.0
    container_name: sawtooth-shell-pdo
    hostname: sawtooth-shell-pdo
    depends_on:
      - rest-api
    entrypoint: "bash -c \"\
        sawtooth keygen --force && \
        tail -f /dev/null \
        \""
    volumes:
       - ./:/mnt/pdo



#! /usr/bin/env pdo-shell

## Copyright 2018 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

if --null "${data}"
   echo data macro must be defined
   exit
fi

set --conditional -s service_host -v "SERVICE_HOST"

## -----------------------------------------------------------------
## Set the default set of eservices that this file knows
## about. There may be more that have been added to the
## eservice database. This list is primarily that ones that
## will be used by the local client to create & interact with
## contracts.
## -----------------------------------------------------------------
set -s eservice1 -v http://${service_host}:7101
set -s eservice2 -v http://${service_host}:7102
set -s eservice3 -v http://${service_host}:7103
set -s eservice4 -v http://${service_host}:7104
set -s eservice5 -v http://${service_host}:7105

## load the local database if it exists
set --conditional -s dbfile --state Service EnclaveServiceDatabaseFile

## this returns false of the database file does not exist
## we can use this later to save the updates
eservice_db load --database ${dbfile} -s _database_exists_

## make sure the minimal set of enclave services is included
## if these are already in the database they will not be re-added
eservice_db add --url ${eservice1} --name es7101
eservice_db add --url ${eservice2} --name es7102
eservice_db add --url ${eservice3} --name es7103
eservice_db add --url ${eservice4} --name es7104
eservice_db add --url ${eservice5} --name es7105

if -e ${_database_exists_} False
   eservice_db save --database ${dbfile}
   echo eservice database updated
fi

## -----------------------------------------------------------------
## Define provisioning service groups to simplify specification
## of contract key provisioning. Each group specifies a set of
## provisioning services that will be used for provisioning keys
## into the contract enclaves.
## -----------------------------------------------------------------
set -s pservice1 -v http://${service_host}:7001
set -s pservice2 -v http://${service_host}:7002
set -s pservice3 -v http://${service_host}:7003
set -s pservice4 -v http://${service_host}:7004
set -s pservice5 -v http://${service_host}:7005

## default pservice group
pservice add --url ${pservice1}
pservice add --url ${pservice2}
pservice add --url ${pservice3}

## pservice group p1
pservice --group p1 add --url ${pservice3}
pservice --group p1 add --url ${pservice4}
pservice --group p1 add --url ${pservice5}

## pservice group all
pservice --group all add --url ${pservice1}
pservice --group all add --url ${pservice2}
pservice --group all add --url ${pservice3}
pservice --group all add --url ${pservice4}
pservice --group all add --url ${pservice5}

## -----------------------------------------------------------------
## Define enclave service groups to simplify specification
## of eservices to be provisioned for the contract object. Each
## group specifies a set of enclave services that may be used
## to interact with the contract. It also specifies (through the
## "use" command) a preferred service. The preferred service will
## often have the current state already cached.
## -----------------------------------------------------------------

## default eservice group
eservice add --url ${eservice1}
eservice add --url ${eservice2}
eservice add --url ${eservice3}
eservice use --url ${eservice1}

## eservice group e2
eservice --group e2 add --url ${eservice2}
eservice --group e2 add --url ${eservice3}
eservice --group e2 add --url ${eservice4}
eservice --group e2 use --url ${eservice2}

## eservice group e3
eservice --group e3 add --url ${eservice3}
eservice --group e3 add --url ${eservice4}
eservice --group e3 add --url ${eservice5}
eservice --group e3 use --url ${eservice3}

## eservice group e4
eservice --group e4 add --url ${eservice4}
eservice --group e4 add --url ${eservice5}
eservice --group e4 add --url ${eservice1}
eservice --group e4 use --url ${eservice4}

## eservice group e5
eservice --group e5 add --url ${eservice5}
eservice --group e5 add --url ${eservice1}
eservice --group e5 add --url ${eservice2}
eservice --group e5 use --url ${eservice5}

## eservice group all
eservice --group all add --url ${eservice1}
eservice --group all add --url ${eservice2}
eservice --group all add --url ${eservice3}
eservice --group all add --url ${eservice4}
eservice --group all add --url ${eservice5}
eservice --group all use --url ${eservice1}

## -----------------------------------------------------------------
## Define storage service groups to simplify specification
## of contract state storage and replication policies. Each
## group specifies a set of storage services, the policy
## for how long the storage services will keep a copy of
## the contract state, and the number of replicas that
## must be completed before the ledger will accept a state
## update.
##
## the persistent storage service adds a notation to the
## contract file a storage service that will maintain
## a persistent copy of the state of the contract object
## that is, there is a HINT (not a guarantee) that the
## current state of the object can be retrieved from the
## persistent storage service
## -----------------------------------------------------------------
set -s sservice1 -v http://${service_host}:7201
set -s sservice2 -v http://${service_host}:7202
set -s sservice3 -v http://${service_host}:7203
set -s sservice4 -v http://${service_host}:7204
set -s sservice5 -v http://${service_host}:7205

set -s persistent_storage_service -v ${sservice1}

## default sservice group
sservice add --url ${sservice1}
sservice add --url ${sservice2}
sservice add --url ${sservice3}
sservice set --duration 120 --replicas 2 --persistent ${persistent_storage_service}

## sservice group s2
sservice --group s2 add --url ${sservice2}
sservice --group s2 add --url ${sservice3}
sservice --group s2 add --url ${sservice4}
sservice --group s2 set --duration 120 --replicas 2 --persistent ${persistent_storage_service}

## sservice group s3
sservice --group s3 add --url ${sservice3}
sservice --group s3 add --url ${sservice4}
sservice --group s3 add --url ${sservice5}
sservice --group s3 set --duration 120 --replicas 2 --persistent ${persistent_storage_service}

## sservice group s4
sservice --group s4 add --url ${sservice4}
sservice --group s4 add --url ${sservice5}
sservice --group s4 add --url ${sservice1}
sservice --group s4 set --duration 120 --replicas 2 --persistent ${persistent_storage_service}

## sservice group s5
sservice --group s5 add --url ${sservice5}
sservice --group s5 add --url ${sservice1}
sservice --group s5 add --url ${sservice2}
sservice --group s5 set --duration 120 --replicas 2 --persistent ${persistent_storage_service}

## all sservices
sservice --group all add --url ${sservice1}
sservice --group all add --url ${sservice2}
sservice --group all add --url ${sservice3}
sservice --group all add --url ${sservice4}
sservice --group all add --url ${sservice5}
sservice --group all set --duration 3600 --replicas 3 --persistent ${persistent_storage_service}

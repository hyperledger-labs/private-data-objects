#! /usr/bin/env pdo-shell

## Copyright 2018 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

set --conditional -s data -v .
set --conditional -s save -v .

if --null "${tmpfile}"
   echo must specify tmpfile for test
   exit -v -1
fi

## create an eservice db with the known enclave services
eservice_db clear
eservice_db add --url http://${host}:7101 --name es7101
eservice_db add --url http://${host}:7102 --name es7102
eservice_db add --url http://${host}:7103 --name es7103
eservice_db add --url http://${host}:7104 --name es7104
eservice_db add --url http://${host}:7105 --name es7105
eservice_db save --database ${data}/test-db.json

eservice_db clear
eservice_db load --database ${data}/test-db.json

## default pservice group
pservice add --url http://${host}:7001
pservice add --url http://${host}:7002
pservice add --url http://${host}:7003

## pservice group p1
pservice --group p1 add --url http://${host}:7003
pservice --group p1 add --url http://${host}:7004
pservice --group p1 add --url http://${host}:7005

## pservice group all
pservice --group all add --url http://${host}:7001
pservice --group all add --url http://${host}:7002
pservice --group all add --url http://${host}:7003
pservice --group all add --url http://${host}:7004
pservice --group all add --url http://${host}:7005

## default eservice group
eservice add --url http://${host}:7101
eservice add --url http://${host}:7102
eservice add --url http://${host}:7103

## eservice group e1
eservice --group e1 add --name es7103 es7104 es7105
eservice --group e1 use --url http://${host}:7105

## eservice group all
eservice --group all add --url http://${host}:7101
eservice --group all add --url http://${host}:7102 http://${host}:7103 --name es7104 es7105
eservice --group all use --name es7104

## default sservice group
set -s persistent_storage_service -v http://${host}:7201

sservice add --url http://${host}:7201
sservice add --url http://${host}:7202
sservice add --url http://${host}:7203
sservice set --duration 120 --replicas 2 --persistent ${persistent_storage_service}

## sservice group s1
sservice --group s1 add --url http://${host}:7203
sservice --group s1 add --url http://${host}:7204
sservice --group s1 add --url http://${host}:7205
sservice --group s2 set --duration 120 --replicas 2 --persistent ${persistent_storage_service}

## sservice group s2
sservice --group s2 add --url http://${host}:7201
sservice --group s2 add --url http://${host}:7202
sservice --group s2 set --duration 120 --replicas 1 --persistent ${persistent_storage_service}

## all sservices
sservice --group all add --url http://${host}:7201
sservice --group all add --url http://${host}:7202
sservice --group all add --url http://${host}:7203
sservice --group all add --url http://${host}:7204
sservice --group all add --url http://${host}:7205
sservice --group all set --duration 3600 --replicas 3 --persistent ${persistent_storage_service}

## create some contracts
set -s contract1 -r 32
set -s contract2 -r 32
set -s contract3 -r 32
set -s contract4 -r 32

identity -n user1
create -c mock-contract -s _mock-contract -f ${save}/${contract1}.pdo
send -f ${save}/${contract1}.pdo inc_value
send -f ${save}/${contract1}.pdo inc_value
send -f ${save}/${contract1}.pdo -s value inc_value
if -e ${value} 3
    echo shell test 1 succeeded
else
    echo shell test 1 failed
    exit -v -1
fi

identity -n user2
create -c mock-contract -s _mock-contract -r all -p all -e all -f ${save}/${contract2}.pdo
send -f ${save}/${contract2}.pdo --wait inc_value -e http://${host}:7101
send -f ${save}/${contract2}.pdo --wait inc_value -e http://${host}:7102
send -f ${save}/${contract2}.pdo --wait inc_value -e random
send -f ${save}/${contract2}.pdo --wait inc_value -e random
send -f ${save}/${contract2}.pdo get_value -s value
if -e ${value} 4
    echo shell test 2 succeeded
else
    echo shell test 2 failed
    exit -v -1
fi

identity -n user3
create -c mock-contract -s _mock-contract -r s1 -p p1 -e e1 -f ${save}/${contract3}.pdo
send -f ${save}/${contract3}.pdo inc_value -s r8 -e preferred
send -f ${save}/${contract3}.pdo inc_value -s r9 -e random
send -f ${save}/${contract3}.pdo inc_value -s r10 -e random
send -f ${save}/${contract3}.pdo get_value -s value
if -e ${value} 3
    echo shell test 3 succeeded
else
    echo shell test 3 failed
    exit -v -1
fi

identity -n user4
create -c mock-contract -s _mock-contract -r s2 -p p1 -e e1 -f ${save}/${contract4}.pdo
send -f ${save}/${contract4}.pdo inc_value -s v -e preferred
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo inc_value -s v -e random
send -f ${save}/${contract4}.pdo get_value -s value
if -e ${value} 10
    echo shell test 4 succeeded
else
    echo shell test 4 failed
    exit -v -1
fi

## test service group export and import
service_groups save --file ${tmpfile}

## create a new group that should be overwritten by a no-merge load
sservice --group group_test add --url http://${host}:7201
sservice --group group_test set --duration 3600 --replicas 3 --persistent ${persistent_storage_service}

service_groups load --file ${tmpfile} --no-merge

## test that group_test was overwritten by the load
set -s _group_test_sym_  --state Service StorageServiceGroups group_test persistent
if --not --null "${_group_test_sym_}"
   echo service group load failed to overwrite data; ${_group_test_sym_}
   exit -v -1
fi

## test that the s1 group was actually loaded
set -s _group_test_sym_  --state Service StorageServiceGroups s2 persistent
if --null "${_group_test_sym_}"
   echo service group load failed to fetch data
   exit -v -1
fi

## create a new group that should be available after a merge load
sservice --group group_test add --url http://${host}:7201
sservice --group group_test set --duration 3600 --replicas 3 --persistent ${persistent_storage_service}

service_groups load --file ${tmpfile} --merge

## test that the group_test was not overwriten
set -s _group_test_sym_  --state Service StorageServiceGroups group_test persistent
if --null "${_group_test_sym_}"
   echo service group load failed preserve data during merge
   exit -v -1
fi

## test that the s1 group was actually loaded
set -s _group_test_sym_  --state Service StorageServiceGroups s2 persistent
if --null "${_group_test_sym_}"
   echo service group load failed to preserve data during merge
   exit -v -1
fi

echo service group test succeeded

exit
